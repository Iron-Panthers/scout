@use "sass:color";

$tab-size: 2em;
$key-value-gap: 0.4em;

$outline-thickness: 0.2em;

$padding-horizontal: 0.4em;
$padding-vertical: 0.6em;

$violet: #cc99c9;
$blue: #9ec1cf;
$green: #9ee09e;
$yellow: #fdfd97;
$orange: #feb144;
$red: #ff6663;

@mixin highlightType($type, $color) {
  &.#{$type} {
    background-color: $color;
    outline: $outline-thickness solid color.scale($color, $lightness: -40%);
  }
}

.DataEditor,
.labeledElement {
  display: flex;
  align-items: flex-start;
}

.DataEditor {
  flex-direction: column;
  overflow-y: scroll;
  grid-column: span 2;
  grid-row: span 4;
  & p {
    margin: 0;
    padding-top: $padding-vertical;
    padding-bottom: $padding-vertical;
  }
}

.labeledElement {
  // type colors
  @include highlightType("Object > p:first-child", $blue);
  @include highlightType(String, $orange);
  @include highlightType(Number, $violet);
  @include highlightType(Boolean, $green);
  @include highlightType("Null, &.Undefined", $red);
  // end type colors

  &.Object > p:first-child {
    padding-right: $padding-vertical;
  }

  flex-direction: row;
  &.vertical {
    flex-direction: column;
    & .labeledElement {
      margin-left: $tab-size;
    }
  }
  & p:first-child {
    padding-left: $padding-horizontal;
    margin-right: $key-value-gap;
  }
  & p:nth-child(2) {
    padding-right: $padding-horizontal;
  }
}
